Terminals unused in grammar

   TOK_BLOCK
   TOK_CALL
   TOK_IFELSE
   TOK_INITDECL
   TOK_POS
   TOK_NEG
   TOK_NEWARRAY
   TOK_TYPEID
   TOK_FIELD


Grammar

    0 $accept: program $end

    1 program: program token
    2        | /* empty */

    3 token: '('
    4      | ')'
    5      | '['
    6      | ']'
    7      | '{'
    8      | '}'
    9      | ';'
   10      | ','
   11      | '.'
   12      | '='
   13      | '+'
   14      | '-'
   15      | '*'
   16      | '/'
   17      | '%'
   18      | '!'
   19      | '<'
   20      | '>'
   21      | TOK_VOID
   22      | TOK_CHAR
   23      | TOK_INT
   24      | TOK_STRING
   25      | TOK_IF
   26      | TOK_ELSE
   27      | TOK_WHILE
   28      | TOK_RETURN
   29      | TOK_STRUCT
   30      | TOK_NULL
   31      | TOK_NEW
   32      | TOK_ARRAY
   33      | TOK_EQ
   34      | TOK_NE
   35      | TOK_LT
   36      | TOK_LE
   37      | TOK_GT
   38      | TOK_GE
   39      | TOK_IDENT
   40      | TOK_INTCON
   41      | TOK_CHARCON
   42      | TOK_STRINGCON
   43      | TOK_ORD
   44      | TOK_CHR
   45      | TOK_ROOT


Terminals, with rules where they appear

$end (0) 0
'!' (33) 18
'%' (37) 17
'(' (40) 3
')' (41) 4
'*' (42) 15
'+' (43) 13
',' (44) 10
'-' (45) 14
'.' (46) 11
'/' (47) 16
';' (59) 9
'<' (60) 19
'=' (61) 12
'>' (62) 20
'[' (91) 5
']' (93) 6
'{' (123) 7
'}' (125) 8
error (256)
TOK_VOID (258) 21
TOK_CHAR (259) 22
TOK_INT (260) 23
TOK_STRING (261) 24
TOK_IF (262) 25
TOK_ELSE (263) 26
TOK_WHILE (264) 27
TOK_RETURN (265) 28
TOK_STRUCT (266) 29
TOK_NULL (267) 30
TOK_NEW (268) 31
TOK_ARRAY (269) 32
TOK_EQ (270) 33
TOK_NE (271) 34
TOK_LT (272) 35
TOK_LE (273) 36
TOK_GT (274) 37
TOK_GE (275) 38
TOK_IDENT (276) 39
TOK_INTCON (277) 40
TOK_CHARCON (278) 41
TOK_STRINGCON (279) 42
TOK_BLOCK (280)
TOK_CALL (281)
TOK_IFELSE (282)
TOK_INITDECL (283)
TOK_POS (284)
TOK_NEG (285)
TOK_NEWARRAY (286)
TOK_TYPEID (287)
TOK_FIELD (288)
TOK_ORD (289) 43
TOK_CHR (290) 44
TOK_ROOT (291) 45


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1 2, on right: 0 1
token (57)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
    45, on right: 1


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    1 program: program . token

    $end           shift, and go to state 2
    TOK_VOID       shift, and go to state 3
    TOK_CHAR       shift, and go to state 4
    TOK_INT        shift, and go to state 5
    TOK_STRING     shift, and go to state 6
    TOK_IF         shift, and go to state 7
    TOK_ELSE       shift, and go to state 8
    TOK_WHILE      shift, and go to state 9
    TOK_RETURN     shift, and go to state 10
    TOK_STRUCT     shift, and go to state 11
    TOK_NULL       shift, and go to state 12
    TOK_NEW        shift, and go to state 13
    TOK_ARRAY      shift, and go to state 14
    TOK_EQ         shift, and go to state 15
    TOK_NE         shift, and go to state 16
    TOK_LT         shift, and go to state 17
    TOK_LE         shift, and go to state 18
    TOK_GT         shift, and go to state 19
    TOK_GE         shift, and go to state 20
    TOK_IDENT      shift, and go to state 21
    TOK_INTCON     shift, and go to state 22
    TOK_CHARCON    shift, and go to state 23
    TOK_STRINGCON  shift, and go to state 24
    TOK_ORD        shift, and go to state 25
    TOK_CHR        shift, and go to state 26
    TOK_ROOT       shift, and go to state 27
    '('            shift, and go to state 28
    ')'            shift, and go to state 29
    '['            shift, and go to state 30
    ']'            shift, and go to state 31
    '{'            shift, and go to state 32
    '}'            shift, and go to state 33
    ';'            shift, and go to state 34
    ','            shift, and go to state 35
    '.'            shift, and go to state 36
    '='            shift, and go to state 37
    '+'            shift, and go to state 38
    '-'            shift, and go to state 39
    '*'            shift, and go to state 40
    '/'            shift, and go to state 41
    '%'            shift, and go to state 42
    '!'            shift, and go to state 43
    '<'            shift, and go to state 44
    '>'            shift, and go to state 45

    token  go to state 46


State 2

    0 $accept: program $end .

    $default  accept


State 3

   21 token: TOK_VOID .

    $default  reduce using rule 21 (token)


State 4

   22 token: TOK_CHAR .

    $default  reduce using rule 22 (token)


State 5

   23 token: TOK_INT .

    $default  reduce using rule 23 (token)


State 6

   24 token: TOK_STRING .

    $default  reduce using rule 24 (token)


State 7

   25 token: TOK_IF .

    $default  reduce using rule 25 (token)


State 8

   26 token: TOK_ELSE .

    $default  reduce using rule 26 (token)


State 9

   27 token: TOK_WHILE .

    $default  reduce using rule 27 (token)


State 10

   28 token: TOK_RETURN .

    $default  reduce using rule 28 (token)


State 11

   29 token: TOK_STRUCT .

    $default  reduce using rule 29 (token)


State 12

   30 token: TOK_NULL .

    $default  reduce using rule 30 (token)


State 13

   31 token: TOK_NEW .

    $default  reduce using rule 31 (token)


State 14

   32 token: TOK_ARRAY .

    $default  reduce using rule 32 (token)


State 15

   33 token: TOK_EQ .

    $default  reduce using rule 33 (token)


State 16

   34 token: TOK_NE .

    $default  reduce using rule 34 (token)


State 17

   35 token: TOK_LT .

    $default  reduce using rule 35 (token)


State 18

   36 token: TOK_LE .

    $default  reduce using rule 36 (token)


State 19

   37 token: TOK_GT .

    $default  reduce using rule 37 (token)


State 20

   38 token: TOK_GE .

    $default  reduce using rule 38 (token)


State 21

   39 token: TOK_IDENT .

    $default  reduce using rule 39 (token)


State 22

   40 token: TOK_INTCON .

    $default  reduce using rule 40 (token)


State 23

   41 token: TOK_CHARCON .

    $default  reduce using rule 41 (token)


State 24

   42 token: TOK_STRINGCON .

    $default  reduce using rule 42 (token)


State 25

   43 token: TOK_ORD .

    $default  reduce using rule 43 (token)


State 26

   44 token: TOK_CHR .

    $default  reduce using rule 44 (token)


State 27

   45 token: TOK_ROOT .

    $default  reduce using rule 45 (token)


State 28

    3 token: '(' .

    $default  reduce using rule 3 (token)


State 29

    4 token: ')' .

    $default  reduce using rule 4 (token)


State 30

    5 token: '[' .

    $default  reduce using rule 5 (token)


State 31

    6 token: ']' .

    $default  reduce using rule 6 (token)


State 32

    7 token: '{' .

    $default  reduce using rule 7 (token)


State 33

    8 token: '}' .

    $default  reduce using rule 8 (token)


State 34

    9 token: ';' .

    $default  reduce using rule 9 (token)


State 35

   10 token: ',' .

    $default  reduce using rule 10 (token)


State 36

   11 token: '.' .

    $default  reduce using rule 11 (token)


State 37

   12 token: '=' .

    $default  reduce using rule 12 (token)


State 38

   13 token: '+' .

    $default  reduce using rule 13 (token)


State 39

   14 token: '-' .

    $default  reduce using rule 14 (token)


State 40

   15 token: '*' .

    $default  reduce using rule 15 (token)


State 41

   16 token: '/' .

    $default  reduce using rule 16 (token)


State 42

   17 token: '%' .

    $default  reduce using rule 17 (token)


State 43

   18 token: '!' .

    $default  reduce using rule 18 (token)


State 44

   19 token: '<' .

    $default  reduce using rule 19 (token)


State 45

   20 token: '>' .

    $default  reduce using rule 20 (token)


State 46

    1 program: program token .

    $default  reduce using rule 1 (program)
